# If not running interactively, don't do anything
[[ $- != *i* ]] && return

# Load starship prompt if starship is installed
if [ -x /usr/bin/starship ]; then
	__main() {
		local major="${BASH_VERSINFO[0]}"
		local minor="${BASH_VERSINFO[1]}"

		if ((major > 4)) || { ((major == 4)) && ((minor >= 1)); }; then
			source <("/usr/bin/starship" init bash --print-full-init)
		else
			source /dev/stdin <<<"$("/usr/bin/starship" init bash --print-full-init)"
		fi
	}
	__main
	unset -f __main
fi
export LIBVIRT_DEFAULT_URI="qemu:///system"
#exec fish

# Advanced command-not-found hook
#source /usr/share/doc/find-the-command/ftc.bash

## Useful aliases

# Replace ls with exa
alias ls='exa -al --color=always --group-directories-first --icons'     # preferred listing
alias la='exa -a --color=always --group-directories-first --icons'      # all files and dirs
alias ll='exa -l --color=always --group-directories-first --icons'      # long format
alias lt='exa -aT --color=always --group-directories-first --icons'     # tree listing
alias l.='exa -ald --color=always --group-directories-first --icons .*' # show only dotfiles

# Replace some more things with better alternatives
alias bcat='bat --style header --style snip --style changes --style header'
[ ! -x /usr/bin/yay ] && [ -x /usr/bin/paru ] && alias yay='paru'

# Common use
alias grubup="sudo update-grub"
alias fixpacman="sudo rm /var/lib/pacman/db.lck"
alias tarnow='tar -acf '
alias untar='tar -zxvf '
alias wget='wget -c '
alias rmpkg="sudo pacman -Rdd"
alias psmem='ps auxf | sort -nr -k 4'
alias psmem10='ps auxf | sort -nr -k 4 | head -10'
alias upd='/usr/bin/garuda-update'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias ......='cd ../../../../..'
alias dir='dir --color=auto'
alias vdir='vdir --color=auto'
alias grep='ugrep --color=auto'
alias fgrep='ugrep -F --color=auto'
alias egrep='ugrep -E --color=auto'
alias hw='hwinfo --short'                          # Hardware Info
alias big="expac -H M '%m\t%n' | sort -h | nl"     # Sort installed packages according to size in MB (expac must be installed)
alias gitpkg='pacman -Q | grep -i "\-git" | wc -l' # List amount of -git packages
alias ip='ip -color'

# Get fastest mirrors
alias mirror="sudo reflector -f 30 -l 30 --number 10 --verbose --save /etc/pacman.d/mirrorlist"
alias mirrord="sudo reflector --latest 50 --number 20 --sort delay --save /etc/pacman.d/mirrorlist"
alias mirrors="sudo reflector --latest 50 --number 20 --sort score --save /etc/pacman.d/mirrorlist"
alias mirrora="sudo reflector --latest 50 --number 20 --sort age --save /etc/pacman.d/mirrorlist"

# Help people new to Arch
alias apt='man pacman'
alias apt-get='man pacman'
alias please='sudo'
alias tb='nc termbin.com 9999'
alias helpme='cht.sh --shell'
alias pacdiff='sudo -H DIFFPROG=meld pacdiff'

# Cleanup orphaned packages
alias cleanup='sudo pacman -Rns $(pacman -Qtdq)'

# Get the error messages from journalctl
alias jctl="journalctl -p 3 -xb"

# Recent installed packages
alias rip="expac --timefmt='%Y-%m-%d %T' '%l\t%n %v' | sort | tail -200 | nl"


neofetch
### SHORTCUTS ###
alias vi='nvim'
alias vim='nvim'
alias wg-up='sudo wg-quick up wg0'
alias wg-down='sudo wg-quick down wg0'
alias whoiss='ps aux | grep pts'
alias secheaders='~/.local/bin/secheaders'
alias myhistory='bash ~/GIT/myhistory/myhistory.sh'
alias upsacle='flatpak run io.gitlab.theevilskeleton.Upscaler'

### ALIAS ###

alias du='du -sh'
alias bcat='bat'

## SSH ##

alias ssh='ssh -o "StrictHostKeyChecking no" -o "UserKnownHostsFile=/dev/null"'
alias scp='scp -o "StrictHostKeyChecking no" -o "UserKnownHostsFile=/dev/null"'

## SSH ##


## FIND ##

alias chng='find . -print0 | xargs -0 stat -c "%Z %z %n" | sort -nr | head -10'
alias lastf="find . -type f -printf '%TY-%Tm-%Td %TH:%TM %p\n' | sort -r | head -n 10"

## FIND ##

## NETWORK ##

alias port-find='sudo ss -tulnp | grep'
alias checkport='sudo ss -tulnp'
alias tr='traceroute'
alias myip='curl ifconfig.me'

## NETWORK ##

## DOCKER ##

alias d='docker'
alias dps='docker ps'
alias dcon='docker container'
alias dcom='docker compose'
alias dls='docker images'

alias ddel='docker container rm $(docker container ls -aq)'
alias dstop='docker stop $(docker ps -q)'

#belirtilen netwwork ismine bağlı networkleri listeler
alias dn="docker network inspect --format='{{range .Containers}} {{.Name}} {{end}}'"
#belirtilen container'in ip adresini verir
alias dip="docker inspect -f '{{range .NetworkSettings.Networks}} {{.IPAddress}}{{end}}'"


## DOCKER ##


## K8S ##

alias k='kubectl'
alias ki='kubectl cluster-info'

kset() {
  local ns="$1"
  kubectl config set-context --current --namespace="$ns"
}

alias ks='kubectl -n kube-system'
alias kcf='kubectl create -f'
alias kcn='kubectl create namespace'
alias kdn='kubectl delete namespace'

alias knls='kubectl get nodes'
alias kp='kubectl get pods'
alias kns='kubectl get ns'
alias kls='kubectl get pods -A'
alias kll='kubectl get all'

alias kapp='kubectl apply -f'

alias kedit='kubectl edit pods'
alias kdes='kubectl describe pod'

alias kexp='kubectl explain'
alias klog='kubectl logs'

alias krs='kubectl get rs'
alias kpvc='kubectl get pvc'
alias ksvc='kubectl get svc'
alias kgs='kubectl get services'
alias kgd='kubectl get deployments'

alias krm='kubectl delete'
alias krmf='kubectl delete -f'
alias kdp='kubectl delete pod'
alias kds='kubectl delete service'
alias kdd='kubectl delete deployment'
alias knewtoken='kubeadm token create --print-join-command'

## K8S ##


### ENV ###

export KUBECONFIG=~/.kube/foxhound.yaml
export HISTFILE=/home/shyuuhei/.bash_history
export HISTTIMEFORMAT="%Y/%m/%d %H:%M:%S "
export HISTSIZE=1000
export HISTFILESIZE=2000
export HISTTIMEFORMAT="%Y/%m/%d %H:%M:%S "

### ENV ###
